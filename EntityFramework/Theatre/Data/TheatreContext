namespace Theatre.Data
{
    using Microsoft.EntityFrameworkCore;
    using Theatre.Data.Models;

    public class TheatreContext : DbContext
    {
        public TheatreContext() { }

        public TheatreContext(DbContextOptions options)
            : base(options) { }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
                optionsBuilder
                    .UseSqlServer(Configuration.ConnectionString);
            }
        }

        public DbSet<Cast> Casts { get; set; }
        public DbSet<Play> Plays { get; set; }
        public DbSet<Theatre> Theatres { get; set; }
        public DbSet<Ticket> Tickets {get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Cast>()
                   .HasOne(c => c.Play)
                   .WithMany(p => p.Casts)
                   .HasForeignKey(c => c.PlayId)
                   .OnDelete(DeleteBehavior.Restrict);

            modelBuilder.Entity<Ticket>()
                   .HasOne(t => t.Play)
                   .WithMany(p => p.Tickets)
                   .HasForeignKey(t => t.PlayId)
                   .OnDelete(DeleteBehavior.Restrict);

            modelBuilder.Entity<Ticket>()
                   .HasOne(ti => ti.Theatre)
                   .WithMany(th => th.Tickets)
                   .HasForeignKey(ti => ti.TheatreId)
                   .OnDelete(DeleteBehavior.Restrict);
        }
      
    }
}
